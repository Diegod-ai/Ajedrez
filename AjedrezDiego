(define (restrictions str inicialPos endPos)
  
  ;;Estos dos identificadores estan hechos para sacar la posicion en "X" y "Y"
  ;;de la posicion inicial de una pieza
(define yPosInitial ( quotient inicialPos 8 ))
(define xPosInitial (remainder inicialPos 8 ))
  
    ;;Estos dos identificadores estan hechos para sacar la posicion en "X" y "Y"
  ;;de la posicion final de una pieza
(define yPosFinal ( quotient  endPos 8 ))
(define xPosFinal (remainder endPos 8 ))
  
  ;;Este identificador saca la distancia que hay entre la posicion inicial y la posicion final
(define distance (- endPos inicialPos ))
  
  ;;Esta funci√≥n determinara si una pieza puede hacer un movimiento en linea
  ;;La logica se basa en que para que un movimiento sea lineal entonces
  ;;En las posiciones x o y solo se modificara uno de los dos valores

  (define (inMoveLine stop)

    
    (cond
      
        [(or (equal? (string-ref str inicialPos) #\T ) (equal? (string-ref str inicialPos) #\t )) 
         
         (if (or (and (equal? yPosInitial yPosFinal ) (not (equal? xPosInitial xPosFinal )))
                 (and (equal? xPosInitial xPosFinal ) (not (equal? yPosInitial yPosFinal ))))
              
             (if (equal? (string-ref str stop) #\x )  
                 (if (equal? stop 1 )
                     "El movimiento es legal"
                     (inMoveLine (sub1 stop)))
                 "El movimiento es ilegal"
                 )
             ""
          );EndIf
         ]

        )

    );EndFunction inMoveLine
  
(inMoveLine distance)
  
  );;------------------endFunction restrictions-----------------;;
